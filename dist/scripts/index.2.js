(()=>{"use strict";(class{static async init(t){try{const e=await fetch(t),s=await e.text(),i=document.createElement("div");i.classList.add("visuallyHidden"),i.innerHTML=s,document.body.appendChild(i)}catch(t){console.error(t)}}}).init("./images/icons.min.svg");class t{constructor(){this.$notifications=document.querySelectorAll(".Notification"),this.init()}init(){this.$notifications.forEach((t=>{t.querySelector(".Notification__closer").addEventListener("click",(()=>{t.classList.remove("is-shown")}))}))}static show(t){this.prototype.manipulate("show",t)}static hide(t){this.prototype.manipulate("hide",t)}static toggle(t){this.prototype.manipulate("toggle",t)}manipulate(t,e){const s=document.querySelector(e);s&&s.classList[t]("is-shown")}}window.notifier=new t,document.querySelectorAll(".do-notify").forEach((e=>{const s=e.dataset.target;e.addEventListener("click",(()=>{t.toggle(s)}))}));document.querySelectorAll(".Tabs").forEach((t=>{new class{constructor(t){this.$element=t,this.$navItems=t.querySelectorAll(".Tabs__navItem"),this.$accordionHandlers=t.querySelectorAll(".Tabs__itemHeader"),this.$tabs=t.querySelectorAll(".Tabs__item"),this.currentIndex=0,this.init()}init(){this.$navItems.forEach((t=>{t.addEventListener("click",(e=>{this.currentIndex=this.getIndex(t,this.$navItems),this.openTab(),this.closeTheRest()}))})),this.$accordionHandlers.forEach((t=>{t.addEventListener("click",(e=>{this.currentIndex=this.getIndex(t,this.$accordionHandlers),this.$tabs[this.currentIndex].classList.contains("is-open")?this.closeTab():this.openTab()}))})),window.onresize=this.controlOpenTabs.bind(this)}openTab(){this.$navItems[this.currentIndex].classList.add("is-open"),this.$tabs[this.currentIndex].classList.add("is-open")}closeTab(){this.$navItems[this.currentIndex].classList.remove("is-open"),this.$tabs[this.currentIndex].classList.remove("is-open")}closeTheRest(){this.$navItems.forEach((t=>{if(t!==this.$navItems[this.currentIndex]){let e=this.getIndex(t,this.$navItems);t.classList.remove("is-open"),this.$tabs[e].classList.remove("is-open")}}))}getIndex(t,e){return[].indexOf.call(e,t)}controlOpenTabs(){if(window.innerWidth>767){const t=this.countOpenTabs();(0===t||t>1)&&(this.currentIndex=0,this.closeTheRest(),this.openTab())}}countOpenTabs(){return[...this.$tabs].filter((t=>t.classList.contains("is-open"))).length}}(t)}))})();